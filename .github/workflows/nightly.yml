name: Nightly Figma Render

on:
  schedule:
    # Run at 2:00 JST (17:00 UTC)
    - cron: '0 17 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  render:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml
      
      - name: Run patch and render
        env:
          FIGMA_API_KEY: ${{ secrets.FIGMA_API_KEY }}
          FIGMA_FILE_ID: ${{ secrets.FIGMA_FILE_ID }}
          FIGMA_NODE_ID: ${{ secrets.FIGMA_NODE_ID }}
        run: |
          python bot/patch_and_render.py
      
      - name: Create Issue with Results
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get today's date
            const today = new Date().toISOString().split('T')[0];
            const queueFile = path.join('queue', `queue_${today}.yaml`);
            
            let queueContent = '';
            try {
              if (fs.existsSync(queueFile)) {
                queueContent = fs.readFileSync(queueFile, 'utf8');
              } else {
                queueContent = 'Queue file not found for today';
              }
            } catch (error) {
              queueContent = `Error reading queue file: ${error.message}`;
            }
            
            // Create issue with results
            const { repo, owner } = context.repo;
            const result = await github.rest.issues.create({
              owner,
              repo,
              title: `Figma Render Results - ${today}`,
              body: `## Figma Render Results
              
              Generated by workflow run #${context.runNumber}
              
              ### Queue Content
              \`\`\`yaml
              ${queueContent}
              \`\`\`
              
              Please review the rendered PNG URLs and merge them manually if needed.`
            });
            
            console.log(`Issue created: ${result.data.html_url}`);
