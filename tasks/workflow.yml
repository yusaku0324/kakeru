---
version: "3"

includes:
  core: ./core.yml        # COUNT / WT_DIR / LOG_DIR
  debug: ./debug.yml      # tests:first-fail / tests:lf など
  flow: ./flow.yml        # validate
  parallel: ./parallel.yml    # parallel:run / parallel:pick
  next: ./next.yml        # commit-push / ci:wait

vars:
  COUNT: 12           # 並列本数を固定

tasks:
  #──────────────────────────────────────────────
  # ① 変更直後：FAIL 1 件目だけ見る
  #──────────────────────────────────────────────
  small-fix:
    desc: "pytest first FAIL → 自分でコード修正して上書き保存"
    cmds:
      - task debug:tests:first-fail

  #──────────────────────────────────────────────
  # ② ai-task-1 でフルスイート（xdist）
  #──────────────────────────────────────────────
  full-validate:
    desc: "ai-task-1 full pytest (-n auto)"
    cmds:
      - task flow:validate

  #──────────────────────────────────────────────
  # ③ 12 並列スクリーン → 最初の緑を main へ
  #──────────────────────────────────────────────
  screen-12:
    desc: "parallel run COUNT=12 → pick green branch"
    deps:
      - small-fix
      - full-validate
    cmds:
      - export TASK_COUNT={{.COUNT}}
      - task parallel:run
      - task parallel:pick

  #──────────────────────────────────────────────
  # ④ rebase → commit → push → (gh 認証あれば) CI wait
  #──────────────────────────────────────────────
  push-main:
    desc: "pull --rebase → commit & push → optional CI wait"
    deps: [screen-12]
    cmds:
      - task next:commit-push
      - task next:ci:wait        # gh 未認証なら自動スキップ

  #──────────────────────────────────────────────
  # ⑤ 夜間バッチ：全工程を 1 コマンドで回す
  #    例）crontab:  0 3 * * *  cd /repo && task workflow:nightly-auto
  #──────────────────────────────────────────────
  nightly-auto:
    desc: "shared venv → link tests → run full pipeline & push"
    deps:
      - venv:create-shared       # ← 共有 venv が無ければ作成
      - tests:link               # ← main/tests を各 WT にリンク
      - full-validate
      - screen-12
      - push-main
    cmds:
      - echo "🌙 nightly pipeline completed" 