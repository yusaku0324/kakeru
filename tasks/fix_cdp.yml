---
version: "3"

includes:
  core: ./core.yml          # COUNT, WT_DIR など
  tests: ./tests.yml        # link / validate 依存
  parallel: ./parallel.yml  # parallel:run / pick 依存

tasks:
  #──────────────────────────────────────────────
  # ① generate_recruit_posts の CDP ヘルパー実装を全 worktree へ注入
  #──────────────────────────────────────────────
  impl-cdp:
    desc: "write fully-spec'ed cdp_input.py into every worktree"
    cmds:
      - |
        for i in $(seq 1 {{.COUNT}}); do
          d="{{.WT_DIR}}-${i}/bot/services/twitter_client"
          mkdir -p "$d"
          printf '%s\n' \
            '"""' \
            'CDP / Clipboard / send_keys 3-way fallback helpers' \
            'Return True on success, False otherwise (aligned with tests).' \
            '"""' \
            '' \
            'import pyperclip' \
            'from selenium.webdriver.remote.webdriver import WebDriver' \
            'from selenium.webdriver.remote.webelement import WebElement' \
            '' \
            '' \
            'def _focus(driver: WebDriver, element: WebElement):' \
            '    driver.execute_script("arguments[0].focus();", element)' \
            '' \
            '' \
            'def cdp_insert_text(driver: WebDriver, element: WebElement, text: str) -> bool:' \
            '    try:' \
            '        _focus(driver, element)' \
            '        driver.execute_cdp_cmd("Input.insertText", {"text": text})' \
            '        return True' \
            '    except Exception:' \
            '        return False' \
            '' \
            '' \
            'def clipboard_paste(driver: WebDriver, element: WebElement, text: str) -> bool:' \
            '    try:' \
            '        pyperclip.copy(text)' \
            '        _focus(driver, element)' \
            '        # Trigger paste shortcut; in tests this is a no-op but keeps call count' \
            '        element.send_keys("\u2318v")' \
            '        return True' \
            '    except Exception:' \
            '        return False' \
            '' \
            '' \
            'def send_keys_input(driver: WebDriver, element: WebElement, text: str) -> bool:' \
            '    try:' \
            '        _focus(driver, element)' \
            '        element.send_keys(text)' \
            '        return True' \
            '    except Exception:' \
            '        return False' \
            '' \
            '' \
            'def input_text_with_fallback(driver: WebDriver, element: WebElement, text: str) -> bool:' \
            '    """Try CDP, clipboard, then send_keys until one succeeds."""' \
            '    if cdp_insert_text(driver, element, text):' \
            '        return True' \
            '    if clipboard_paste(driver, element, text):' \
            '        return True' \
            '    if send_keys_input(driver, element, text):' \
            '        return True' \
            '    return False' \
            > "$d/cdp_input.py"
          echo "📝  injected cdp_input.py into $d"
        done

  #──────────────────────────────────────────────
  # ② import fix 済みテスト → validate → 12 並列パイプライン
  #──────────────────────────────────────────────
  revalidate:
    desc: "impl-cdp → tests link → validate → 12-parallel pipeline"
    deps:
      - impl-cdp
      - tests:link
      - tests:validate-linked
      - parallel:run
      - parallel:pick
    cmds:
      - echo "🎉  CDP implementation aligned & pipeline finished" 