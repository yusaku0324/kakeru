---
version: "3"

includes:
  core: ./core.yml        # COUNT / WT_DIR „Å™„Å©ÂÖ±ÈÄöÂ§âÊï∞

tasks:
  # ----------------------------------------------------------------------------
  # ‚ë† Â§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà„Åó„Å¶ main „Å∏ push
  #     task ci:commit-push
  # ----------------------------------------------------------------------------
  commit-push:
    desc: "stage ‚Üí commit ‚Üí push (main)"
    cmds:
      - git add -A
      - |
          if ! git diff --cached --quiet; then
            git commit -m "ci: auto-push"
          else
            echo "üü¢ nothing to commit (skip commit)"
          fi
      - git push -u origin HEAD

  # ----------------------------------------------------------------------------
  # ‚ë° Áõ¥Ëøë„Ç≥„Éü„ÉÉ„Éà„ÅÆ GitHub Actions „Çí„Ç¶„Ç©„ÉÉ„ÉÅ„Åó„Å¶ÁµêÊûú„ÅåÂá∫„Çã„Åæ„ÅßÂæÖÊ©ü
  #     task ci:ci-wait
  # ----------------------------------------------------------------------------
  ci-wait:
    desc: "wait GitHub Actions result for HEAD commit"
    deps: [commit-push]
    silent: true
    cmds:
      - |
          SHA=$(git rev-parse HEAD)
          echo "üîç waiting CI for $SHA ..."
          while :; do
            STATUS=$(gh run list -c "$SHA" -L 1 --json status -q '.[0].status' 2>/dev/null || echo none)
            RESULT=$(gh run list -c "$SHA" -L 1 --json conclusion -q '.[0].conclusion' 2>/dev/null || echo none)

            if [ "$STATUS" = none ]; then
              echo "üîÑ run not found yet"; sleep 20; continue
            fi
            if [ "$STATUS" != completed ]; then
              echo "‚è≥ CI $STATUS‚Ä¶"; sleep 20; continue
            fi
            if [ "$RESULT" = success ]; then
              echo "‚úÖ CI success"; break
            fi

            echo "‚ùå CI $RESULT"; exit 1
          done

  # ----------------------------------------------------------------------------
  # ‚ë¢ „Éñ„É©„Ç¶„Ç∂„ÅßÊúÄÊñ∞ CI Run „ÇíÁõ¥Êé•Èñã„Åè
  #     task ci:screen
  # ----------------------------------------------------------------------------
  screen:
    desc: "open latest CI run in browser"
    cmds:
      - |
          SHA=$(git rev-parse HEAD)
          URL=$(gh run list -c "$SHA" -L 1 --json url -q '.[0].url')
          if [ -n "$URL" ] && [ "$URL" != "null" ]; then
            echo "üåê Opening $URL"
            open "$URL"
          else
            echo "‚ö†Ô∏è  No CI run found for $SHA"; exit 1
          fi 